@page "/store"
@using Microsoft.AspNetCore.Components.Authorization
@using BlazorStore.Client
@using System.Security.Claims
@inject AuthenticationStateProvider auth
@inject IHttpService service
@inject NavigationManager nav

<div class="store">
    <main>
        @if (gameLst != null && gameLst.Count > 0)
        {
            @foreach (var game in gameLst)
            {
                <a class="game-card" href="#">
                    <article>
                        <div>
                            <img src="@game.Image"/>
                        </div>
                        <h3>@game.Title</h3>
                        <p>@game.Description</p>
                        <footer>
                            @if (game.Discount > 0)
                            {
                                <div>-@game.Discount.ToString("P0")</div>
                                <p>
                                    <del>@game.Price.ToString() U$D</del>
                                </p>
                                <span>@((game.Price - game.Price * game.Discount).ToString()) U$D</span>
                            }
                            else
                            {
                                <span>@(game.Price.ToString()) U$D</span>
                            }

                        </footer>
                    </article>
                </a>
            }
        }
    </main>
</div>

@code
{
    List<Game> gameLst = new();

    protected override async Task OnInitializedAsync()
    {
        gameLst = await service.Get<List<Game>>("game");
    }

    public async Task BuyGame(Guid GameId)
    {
        var userId = (await auth.GetAuthenticationStateAsync()).User?.Claims?.FirstOrDefault(p => p.Type == ClaimTypes.UserData)?.Value;

        var userGame = new UserGames();
        userGame.Id = Guid.NewGuid();
        userGame.GameId = GameId;
        userGame.UserProfileId = Guid.Parse(userId);

        await service.PostString("UserGame/", userGame);

        nav.NavigateTo("/library");
    }
}